import java.text.SimpleDateFormat

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.kimdo.cameratestup"
        minSdk 23
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('../../../KeyStore/mbook_debug.keystore')
        }
        release {
            keyAlias 'mbook'
            keyPassword 'wjthinkbig2014'
            storeFile file('../../../KeyStore/mbook.keystore')
            storePassword 'wjthinkbig2014'
            v1SigningEnabled true
            v2SigningEnabled true     // 우선 false에서 true로 풀어줌 과연 나중에는 어떻게 될까?

        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    def archiveBuildType = ["release"]
    applicationVariants.all { variant ->
        variant.outputs.all { output ->

            def originPath = variant.getPackageApplicationProvider().get().outputDirectory

            if (variant.buildType.name in archiveBuildType) {
                def prefixFirstName = "CameraTestUp_"
                def fileName = new SimpleDateFormat("yyyyMMdd_HHmm")
                fileName.setTimeZone(TimeZone.getDefault())

                def dirName = new SimpleDateFormat("yyyyMMdd")
                dirName.setTimeZone(TimeZone.getDefault())

                if (variant.versionName != null) {
                    String name = "${prefixFirstName}${variant.versionCode}_${variant.versionName}R_${fileName.format(new Date())}.APK"
                    outputFileName = new File(name)
                }
                def taskSuffix = variant.name.capitalize()
                def assembleTaskName = "assemble${taskSuffix}"

                def copyDir = new File("../../../Release/${dirName.format(new Date())}")
                def copyTaskName = "archive${taskSuffix}Copy"

                if (tasks.findByName(assembleTaskName)) {
                    def copyAPKTask = tasks.create(copyTaskName, Copy) {
                        description "Archive/copy APK and mappings.txt to a versioned folder."
                        println description

                        from buildDir
                        into copyDir
                        include "**/${output.outputFileName}"
                        eachFile { file -> file.path = file.name }
                        includeEmptyDirs = false
                    }

                    def origin = new File("${originPath}${output.outputFileName}")
                    origin.delete()

                    tasks[assembleTaskName].finalizedBy = [copyAPKTask]
                }
            }
        }
    }
}

dependencies {

    def retrofit_version = "2.9.0"
    def coroutines_version = "1.6.0"
    def lifecycle_version = "2.4.1"

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
//    //okhttp
//    implementation "com.squareup.okhttp3:logging-interceptor:4.9.1"
//    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    implementation 'androidx.fragment:fragment-ktx:1.4.1'

    implementation "com.google.dagger:hilt-android:2.39"
    kapt "com.google.dagger:hilt-android-compiler:2.39"



    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}